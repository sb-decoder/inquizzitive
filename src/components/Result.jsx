// src/components/Result.jsx
import React from 'react';
import { jsPDF } from 'jspdf';
import './Result.css'; // Import existing or new styles

const Result = ({ result }) => {
  // Mock result data (replace with actual props/state from your app)
  const {
    score = 80,
    totalQuestions = 10,
    correctAnswers = 8,
    questions = [
      { question: 'What is 2+2?', userAnswer: '4', correctAnswer: '4', isCorrect: true },
      { question: 'Capital of India?', userAnswer: 'Delhi', correctAnswer: 'Delhi', isCorrect: true },
      { question: 'What is H2O?', userAnswer: 'Water', correctAnswer: 'Water', isCorrect: true },
      { question: 'Largest planet?', userAnswer: 'Mars', correctAnswer: 'Jupiter', isCorrect: false },
      { question: 'What is 5x5?', userAnswer: '25', correctAnswer: '25', isCorrect: true },
      { question: 'Smallest prime number?', userAnswer: '1', correctAnswer: '2', isCorrect: false },
      { question: 'What is the currency of Japan?', userAnswer: 'Yen', correctAnswer: 'Yen', isCorrect: true },
      { question: 'What is the boiling point of water?', userAnswer: '100°C', correctAnswer: '100°C', isCorrect: true },
      { question: 'Who wrote Romeo and Juliet?', userAnswer: 'Shakespeare', correctAnswer: 'Shakespeare', isCorrect: true },
      { question: 'What is the chemical symbol for gold?', userAnswer: 'Au', correctAnswer: 'Au', isCorrect: true },
    ],
  } = result;

  const generatePDF = () => {
    // Initialize jsPDF
    const doc = new jsPDF();

    // Set font and colors to match Inquizzitive's glassmorphic theme
    doc.setFont('Helvetica', 'normal');
    doc.setTextColor(40, 40, 40); // Dark gray for readability
    doc.setFontSize(18);

    // Add title
    doc.text('Inquizzitive Quiz Results', 20, 20);

    // Add score summary
    doc.setFontSize(14);
    doc.text(`Score: ${score}%`, 20, 40);
    doc.text(`Total Questions: ${totalQuestions}`, 20, 50);
    doc.text(`Correct Answers: ${correctAnswers}`, 20, 60);
    doc.text(`Incorrect Answers: ${totalQuestions - correctAnswers}`, 20, 70);

    // Add question-wise feedback (if available)
    if (questions.length > 0) {
      doc.setFontSize(12);
      doc.text('Question-wise Performance:', 20, 90);
      let yPosition = 100;

      questions.forEach((q, index) => {
        // Ensure text doesn't overflow the page
        if (yPosition > 260) {
          doc.addPage();
          yPosition = 20;
        }

        doc.setFontSize(10);
        doc.text(`${index + 1}. ${q.question}`, 20, yPosition);
        doc.text(`Your Answer: ${q.userAnswer}`, 20, yPosition + 5);
        doc.text(`Correct Answer: ${q.correctAnswer}`, 20, yPosition + 10);
        doc.text(`Status: ${q.isCorrect ? 'Correct' : 'Incorrect'}`, 20, yPosition + 15);
        yPosition += 25; // Space between questions
      });
    }

    // Add a footer with branding
    doc.setFontSize(8);
    doc.setTextColor(100, 100, 100);
    doc.text('Generated by Inquizzitive - Powered by xAI', 20, doc.internal.pageSize.height - 10);

    // Save the PDF
    doc.save(`Inquizzitive_Quiz_Results_${new Date().toISOString().split('T')[0]}.pdf`);
  };

  return (
    <div className="result-container">
      <h2>Quiz Results</h2>
      <p>Score: {score}%</p>
      <p>Total Questions: {totalQuestions}</p>
      <p>Correct Answers: {correctAnswers}</p>
      <p>Incorrect Answers: {totalQuestions - correctAnswers}</p>

      {questions.length > 0 && (
        <div className="question-feedback">
          <h3>Question-wise Feedback</h3>
          {questions.map((q, index) => (
            <div key={index} className="question-item">
              <p><strong>Q{index + 1}:</strong> {q.question}</p>
              <p>Your Answer: {q.userAnswer}</p>
              <p>Correct Answer: {q.correctAnswer}</p>
              <p>Status: {q.isCorrect ? 'Correct' : 'Incorrect'}</p>
            </div>
          ))}
        </div>
      )}

      <button className="download-pdf-btn" onClick={generatePDF}>
        Download Results as PDF
      </button>
    </div>
  );
};

export default Result;
